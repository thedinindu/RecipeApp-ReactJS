{"version":3,"sources":["Recipe.js","App.js","index.js"],"names":["Recipe","title","calories","image","url","source","floorCal","Math","floor","className","Card","border","style","borderRadius","margin","boxShadow","Img","variant","src","height","Body","Title","Text","Button","href","target","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","Container","queries","columns","map","recipe","key","label","length","substring","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAuBeA,G,MAjBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,OACtCC,EAAWC,KAAKC,MAAMN,GAC1B,OACI,yBAAKO,UAAU,eACX,kBAACC,EAAA,EAAD,CAAMC,OAAO,QAAQC,MAAO,CAAEC,aAAc,OAAQC,OAAQ,OAAQC,UAAW,mCAC/E,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKf,EAAOS,MAAO,CAAEO,OAAQ,QAASN,aAAc,UAC5E,kBAACH,EAAA,EAAKU,KAAN,KACI,kBAACV,EAAA,EAAKW,MAAN,KAAY,4BAAKpB,IACjB,kBAACS,EAAA,EAAKY,KAAN,mBAAuBhB,GACvB,kBAACI,EAAA,EAAKY,KAAN,iBAAqBjB,GACrB,kBAACkB,EAAA,EAAD,CAAQd,UAAU,kBAAkBQ,QAAQ,UAAUO,KAAMpB,EAAKqB,OAAO,UAAxE,oB,gBC2DDC,EArEH,WACV,IADgB,EAIcC,mBAAS,IAJvB,mBAITC,EAJS,KAIAC,EAJA,OAKYF,mBAAS,IALrB,mBAKTG,EALS,KAKDC,EALC,OAMUJ,mBAAS,QANnB,mBAMTK,EANS,KAMFC,EANE,KAQhBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MANA,2CAAH,qDA4BhB,OAEI,yBAAKhC,UAAU,OACb,4BAAQA,UAAU,aAChB,wBAAIA,UAAU,SAAd,kBAEF,0BAAMmC,SApBM,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAiBqBtB,UAAU,eACnC,2BAAOA,UAAU,aAAasC,KAAK,OAAOC,MAAOlB,EAAQmB,SA1B5C,SAAAJ,GACnBd,EAAUc,EAAEpB,OAAOuB,OACnBN,QAAQC,IAAIb,MAyBN,4BAAQrB,UAAU,gBAAgBsC,KAAK,UAAvC,WAEF,kBAACG,EAAA,EAAD,KACA,kBAAC,IAAD,CAASC,QAnBD,CAAC,CACbC,QAAS,EACTpB,MAAO,oBACN,CACDoB,QAAS,EACTpB,MAAO,uBAeFJ,EAAQyB,KAAI,SAAAC,GAAM,OACf,kBAAC,EAAD,CACEC,IAAKD,EAAOA,OAAOE,MACnBvD,MAAOqD,EAAOA,OAAOE,MAAMC,OAAS,GAA7B,UAAqCH,EAAOA,OAAOE,OAAnD,UAAgEF,EAAOA,OAAOE,MAAME,UAAU,EAAG,IAAjG,OACPxD,SAAUoD,EAAOA,OAAOpD,SACxBC,MAAOmD,EAAOA,OAAOnD,MACrBC,IAAKkD,EAAOA,OAAOlD,IACnBC,OAAQiD,EAAOA,OAAOjD,gBC7DpCsD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b5bd26a5.chunk.js","sourcesContent":["import React from 'react'\nimport Bootstrap from 'bootstrap/dist/css/bootstrap.min.css'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport './resipeStyle.css'\n\nconst Recipe = ({title, calories, image, url, source}) => {\n    var floorCal = Math.floor(calories)\n    return(\n        <div className=\"text-center\">\n            <Card border=\"light\" style={{ borderRadius: '20px', margin: '10px', boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.5)' }}>\n            <Card.Img variant='top' src={image} style={{ height: '250px', borderRadius: '20px'}}/>\n            <Card.Body>\n                <Card.Title><h3>{title}</h3></Card.Title>\n                <Card.Text>Calories - {floorCal}</Card.Text>\n                <Card.Text>Source - {source}</Card.Text>\n                <Button className=\"btn btn-default\" variant=\"primary\" href={url} target=\"_blank\">View Recipe</Button>\n            </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Recipe","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Recipe from './Recipe'\nimport Columns from 'react-columns'\nimport { Container } from 'react-bootstrap'\n\nconst App = () => {\n  const APP_ID = \"e3b07545\"\n  const APP_KEY = \"3197d1ce92ea1a5b60e7b9eb84a719da\"\n\n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('rice')\n\n  useEffect(() => {\n    getRecipes();\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    )\n    const data = await response.json()\n    setRecipes(data.hits)\n    console.log(data.hits)\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value)\n    console.log(search)\n  }\n\n  const getSearch = e => {\n    e.preventDefault()\n    setQuery(search) \n    setSearch('')\n  }\n\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }]\n\n  return(\n    \n      <div className=\"App\">\n        <header className=\"title-bar\">\n          <h1 className=\"title\">Recipe Finder</h1>\n        </header>\n        <form onSubmit={getSearch} className=\"search-form\">\n          <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n          <button className=\"search-button\" type=\"submit\">Search</button>\n        </form>\n        <Container>\n        <Columns queries={queries}>\n        {recipes.map(recipe => (\n            <Recipe \n              key={recipe.recipe.label}\n              title={recipe.recipe.label.length < 20 ? `${recipe.recipe.label}` : `${recipe.recipe.label.substring(0, 20)}...` }\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              url={recipe.recipe.url}\n              source={recipe.recipe.source}\n            />\n          ))}\n        </Columns>\n        </Container>\n      </div>\n    \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}